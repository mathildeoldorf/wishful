{"version":3,"sources":["components/pages/wishlists/UpdateWishlistItem.jsx","components/Loader.jsx","components/pages/home/Home.jsx","components/hooks/MessageHandler.jsx","components/Message.jsx","components/pages/user/Login.jsx","components/hooks/PrompHandler.jsx","components/Prompt.jsx","components/pages/user/Profile.jsx","components/pages/wishlists/UpdateWishlist.jsx","components/pages/wishlists/CreateWishlistItem.jsx","components/pages/wishlists/SingleWishlist.jsx","components/pages/wishlists/CreateWishlist.jsx","components/pages/wishlists/WishlistButton.jsx","components/pages/wishlists/Wishlists.jsx","components/pages/user/ProfilePublic.jsx","components/pages/user/Logout.jsx","components/pages/password/ResetPassword.jsx","components/pages/password/RequestEmailResetPassword.jsx","components/pages/user/Signup.jsx","components/Search.jsx","App.jsx","serviceWorker.js","index.js"],"names":["path","require","UpdateWishlistItem","wishlistID","KeyLink","wishlistItem","setOpen","fetchWishlist","showMessage","useState","loading","setLoading","price","setPrice","link","setLink","console","log","handleUpdateWishlistItem","event","a","preventDefault","axios","get","withCredentials","linkPreviewResponse","dataLinkPreview","data","join","__dirname","image","post","ID","title","description","url","response","message","className","type","onClick","onSubmit","htmlFor","onChange","e","target","value","name","placeholder","id","disabled","length","parseInt","Loader","color","Home","auth","history","useHistory","user","setUser","fetchUser","setTimeout","useEffect","firstName","push","useMessageHandler","initialState","setMessage","resMessage","document","querySelector","classList","add","remove","Message","Login","props","emailValidation","email","setEmail","password","setPassword","from","location","state","pathname","localStorage","getItem","handleAuth","onAuth","setItem","JSON","stringify","parse","test","usePromptHandler","promptMessage","setPromptMessage","promptHeader","setPromptHeader","showPromptMessage","resPromptHeader","resPromptMessage","closePromptMessage","Prompt","cancelAction","confirmAction","Profile","setFirstName","lastName","setLastName","update","setUpdate","validateForm","confirmDelete","onUnAuth","confirmUpdate","UpdateWishlist","singleWishlist","letter","charAt","setName","setDescription","isPublic","setPublic","handleUpdateWishlist","checked","CreateWishlistItem","createWishlistItem","SingleWishlist","userID","context","wishlist","openWishlist","fetchWishlists","API","open","showItems","setShowItems","showText","setShowText","deleteType","setDeleteType","setWishList","wishlistItems","setWishListItems","wishlistItemID","setWishListItemID","setWishListItem","list","items","handleUpdate","updateType","handleDelete","map","i","key","href","rel","style","backgroundImage","substring","CreateWishList","handleCreateWishlist","defaultChecked","WishlistButton","fetchSingleWishlist","Wishlists","wishlistsBank","setWishlistsBank","setSingleWishlist","wishlists","goBack","ProfilePublic","searchID","match","params","fetchUserProfile","Logout","handleUnAuth","clear","ResetPassword","repeatPassword","setRepeatPassword","userToken","token","handleSubmit","RequestEmailResetPassword","Register","Search","setSearchID","active","setActive","searchResults","setSearchResults","handleSearch","hideSearchContainer","showSearchContainer","results","result","onInput","onFocus","onBlur","fetchProfile","defaults","AuthenticatedRoute","Component","component","rest","render","to","App","setAuth","fetchAuthorization","basename","gridTemplateColumns","process","Fragment","activeClassName","exact","Boolean","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4d44917a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./wishlists.css\";\nimport axios from \"axios\";\nconst path = require(\"path\");\n\nconst UpdateWishlistItem = ({\n  wishlistID,\n  KeyLink,\n  wishlistItem,\n  setOpen,\n  fetchWishlist,\n  showMessage,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [price, setPrice] = useState(wishlistItem.price);\n  const [link, setLink] = useState(wishlistItem.link);\n\n  const validateForm = () => {\n    return link.length > 0 && parseInt(price);\n  };\n  console.log(wishlistItem);\n  const handleUpdateWishlistItem = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n\n    console.log(wishlistItem);\n\n    try {\n      let linkPreviewResponse = await axios.get(\n        `http://api.linkpreview.net/?key=${KeyLink}&q=${link}`,\n        {\n          withCredentials: false,\n        }\n      );\n\n      let dataLinkPreview = linkPreviewResponse.data;\n      console.log(\n        path.join(__dirname, \"..\", \"..\", \"..\", \"images\", \"imageThumbnail.png\")\n        // \"../../../images/imageThumbail.png\"\n      );\n\n      const image =\n        dataLinkPreview.image === \"\"\n          ? (dataLinkPreview.image =\n              \"https://dummyimage.com/400x400/494949/f9f9f9.png&text=No+image\")\n          : dataLinkPreview.image;\n      // path.join(__dirname, \"..\", \"..\", \"..\", \"images\", \"imageThumbnail.png\"))\n\n      console.log(image);\n\n      let response = await axios.post(\n        // `http://localhost:9090/wishlists/${wishlistID}/item/${wishlistItem.ID}`,\n        `http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists/${wishlistID}/item/${wishlistItem.ID}`,\n        {\n          title: dataLinkPreview.title,\n          description: dataLinkPreview.description,\n          price: price,\n          link: dataLinkPreview.url,\n          image: image,\n        }\n      );\n\n      let data = response.data;\n\n      console.log(data);\n\n      setLoading(false);\n      fetchWishlist();\n      setOpen(false);\n      showMessage(data.message);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  return (\n    <section className=\"updateWishlistItem relative\">\n      <button\n        className=\"secondary absolute textLeft left\"\n        type=\"button\"\n        onClick={() => setOpen(false)}\n      >\n        Back\n      </button>\n      <div className=\"banner\">\n        <h2>Almost done...</h2>\n        <h1>Simply link the item of your dreams</h1>\n      </div>\n      <form\n        className=\"grid gridGapSmall gridTwoColumns container\"\n        onSubmit={handleUpdateWishlistItem}\n      >\n        <div className=\"container\">\n          <div className=\"container grid\">\n            <label htmlFor=\"price\">Price</label>\n            <input\n              onChange={(e) => setPrice(e.target.value)}\n              type=\"text\"\n              name=\"price\"\n              value={price}\n              placeholder=\"Price in DKK\"\n            />\n          </div>\n          <div className=\"container grid\">\n            <label htmlFor=\"link\">Link</label>\n            <input\n              onChange={(e) => setLink(e.target.value)}\n              type=\"text\"\n              name=\"link\"\n              value={link}\n              placeholder=\"Link to the item\"\n            />\n          </div>\n        </div>\n        <div className=\"relative flexEnd container alignItemsBottom\">\n          <button\n            id={wishlistItem.ID}\n            type=\"submit\"\n            className=\"active\"\n            disabled={!validateForm()}\n          >\n            {!loading ? \"Save item\" : \"Loading...\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default UpdateWishlistItem;\n","import React from \"react\";\n\nimport { BounceLoader } from \"react-spinners\";\nimport \"./utilComponents.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"Loader-wrapper\">\n      <BounceLoader color={\"white\"} className=\"Loader\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport \"./home.css\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"./../../Loader.jsx\";\nconst Home = ({ auth }) => {\n  const history = useHistory();\n  const [user, setUser] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const fetchUser = async () => {\n    try {\n      // let response = await axios.get(\"http://localhost:9090/user/profile\");\n      let response = await axios.get(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/profile\"\n      );\n      let data = response.data.response;\n      setUser(data);\n      setTimeout(() => {\n        setLoading(false);\n      }, 100);\n    } catch (error) {\n      setLoading(false);\n      console.log(error.response.data.response);\n    }\n  };\n\n  useEffect(() => {\n    if (auth) {\n      console.log(auth);\n      fetchUser();\n    }\n  }, []);\n\n  return (\n    <section className=\"home\">\n      {loading ? <Loader /> : null}\n      {auth ? (\n        <>\n          <h2>Welcome back to</h2>\n          <h1>Wishful, {user ? user.firstName : null}</h1>\n          <div className=\"grid gridTwoColumns gridGapSmall container\">\n            <button className=\"active\" onClick={() => history.push(\"/profile\")}>\n              Go to your profile\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2>Welcome to</h2>\n          <h1>Wishful</h1>\n          <div className=\"grid gridTwoColumns gridGapSmall container\">\n            <button className=\"active\" onClick={() => history.push(\"/signup\")}>\n              Signup with email\n            </button>\n            <button onClick={() => history.push(\"/login\")}>\n              Login to my account\n            </button>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nconst useMessageHandler = (initialState) => {\n  const [message, setMessage] = useState(initialState);\n  const showMessage = (resMessage) => {\n    setMessage(resMessage);\n    document.querySelector(\".message\").classList.add(\"appear\");\n    setTimeout(() => {\n      document.querySelector(\".message\").classList.remove(\"appear\");\n    }, 5000);\n  };\n  // console.log(message);\n  return { message, showMessage };\n};\nexport default useMessageHandler;\n","import React from \"react\";\n\nconst Message = ({ resMessage }) => {\n  // console.log(resMessage);\n  return (\n    <div className=\"message\">\n      <p> {resMessage} </p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React, {\n  useState, //useContext\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\n//HANDLE MESSAGE\nimport useMessageHandler from \"../../hooks/MessageHandler.jsx\";\nimport Message from \"./../../Message.jsx\";\n// import AuthContext from \"./../../components/contexts/AuthContext\";\n\nconst Login = (props) => {\n  const emailValidation = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { message, showMessage } = useMessageHandler(null);\n\n  const history = useHistory();\n  const from = props.location.state || {\n    from: {\n      pathname: \"profile\",\n    },\n  };\n\n  const validateForm = () => {\n    return (\n      email.length > 0 && password.length >= 8 && emailValidation.test(email)\n    );\n  };\n\n  if (localStorage.getItem(\"user\")) {\n    history.push(\"/profile\");\n  }\n\n  const handleAuth = async (event) => {\n    event.preventDefault();\n\n    try {\n      //HANDLE LOADING\n      setLoading(true);\n\n      //HANDLE FETCH DATA\n      // let response = await axios.post(\"http://localhost:9090/user/login\",\n      let response = await axios.post(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/login\",\n        {\n          email: email,\n          password: password,\n        }\n      );\n\n      //HANDLE AUTH\n      props.onAuth(true);\n      console.log(\"logging in\");\n\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      console.log(JSON.parse(localStorage.user));\n      //HANDLE REDIRECT\n      history.push(from.from.pathname);\n    } catch (error) {\n      // HANDLE LOADING\n      setLoading(false);\n\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  const handleForgottenPassword = () => {\n    console.log(\"User requested a new password\");\n    history.push(\"/requestReset\");\n  };\n\n  return (\n    <>\n      <Message resMessage={message} />\n      <section className=\"login\">\n        <div className=\"banner\">\n          <h2>Here we go...</h2>\n          <h1>Let's login!</h1>\n        </div>\n        <form\n          className=\"grid gridGapSmall gridTwoColumns container\"\n          onSubmit={handleAuth}\n        >\n          <div className=\"container\">\n            <div className=\"container grid\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                id=\"email\"\n                placeholder=\"E-mail\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></input>\n            </div>\n            <div className=\"container grid\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                id=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></input>\n            </div>\n          </div>\n          <div className=\"relative flexEnd container alignItemsBottom\">\n            <button className=\"active\" disabled={!validateForm()} type=\"submit\">\n              {loading ? \"Loading...\" : \"Login\"}\n            </button>\n            <button\n              className=\"marginTopSmall\"\n              onClick={handleForgottenPassword}\n              type=\"button\"\n            >\n              Forgotten your password ?\n            </button>\n          </div>\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default Login;\n","import { useState } from \"react\";\nconst usePromptHandler = (initialState) => {\n  const [promptMessage, setPromptMessage] = useState(initialState);\n  const [promptHeader, setPromptHeader] = useState(initialState);\n\n  const showPromptMessage = (resPromptHeader, resPromptMessage) => {\n    console.log(resPromptMessage);\n    console.log(resPromptHeader);\n    setPromptMessage(resPromptMessage);\n    setPromptHeader(resPromptHeader);\n  };\n\n  const closePromptMessage = () => {\n    setPromptMessage(null);\n  };\n\n  return { promptMessage, promptHeader, showPromptMessage, closePromptMessage };\n};\nexport default usePromptHandler;\n","import React from \"react\";\n\nconst Prompt = ({\n  resPromptMessage,\n  resPromptHeader,\n  cancelAction,\n  confirmAction,\n  loading,\n}) => {\n  return (\n    <div className=\"bgPrompt\">\n      <div className=\"prompt alignItemsCenter\">\n        <div className=\"banner\">\n          <h2>{resPromptHeader}</h2>\n          <h1 className=\"headerPrompt\">{resPromptMessage}</h1>\n        </div>\n        <div className=\"grid gridTwoColumns alignItemsBottom gridGapSmall\">\n          <button className=\"active\" onClick={confirmAction}>\n            {loading ? \"Loading...\" : \"Confirm\"}\n          </button>\n          <button className=\"marginTopSmall\" onClick={cancelAction}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Prompt;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./user.css\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Loader from \"./../../Loader.jsx\";\n\n//HANDLE MESSAGE\nimport useMessageHandler from \"../../hooks/MessageHandler.jsx\";\nimport Message from \"./../../Message.jsx\";\n\n// HANDLE PROMPT\nimport usePromptHandler from \"./../../hooks/PrompHandler\";\nimport Prompt from \"./../../Prompt\";\n\nconst Profile = (props) => {\n  const history = useHistory();\n\n  const emailValidation = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n\n  const [user, setUser] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [update, setUpdate] = useState(false);\n\n  const [loading, setLoading] = useState(true);\n  const { message, showMessage } = useMessageHandler(null);\n  const {\n    promptMessage,\n    promptHeader,\n    showPromptMessage,\n    closePromptMessage,\n  } = usePromptHandler(null);\n\n  // if (!localStorage.getItem(\"user\")) {\n  //   history.push(\"/\");\n  // }\n\n  const fetchUser = async () => {\n    setLoading(true);\n    try {\n      // let response = await axios.get(\"http://localhost:9090/user/profile\");\n      let response = await axios.get(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/profile\"\n      );\n      let data = response.data.response;\n      setUser(data);\n      setEmail(data.email);\n      setFirstName(data.firstName);\n      setLastName(data.lastName);\n\n      setTimeout(() => {\n        setLoading(false);\n      }, 100);\n    } catch (error) {\n      setLoading(false);\n\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  const validateForm = () => {\n    if (email) {\n      return emailValidation.test(email);\n    } else if (!email && !firstName && !lastName) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    console.log(\"deleting\");\n    showPromptMessage(\n      \"Wait...\",\n      \"Are you sure you want to delete your profile?\"\n    );\n  };\n\n  const confirmDelete = async () => {\n    setLoading(true);\n    try {\n      // let response = await axios.get(\"http://localhost:9090/user/delete\");\n      let response = await axios.get(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/delete\"\n      );\n      // HANDLE AUTH\n      console.log(response);\n      props.onUnAuth(false);\n      history.push(\"/\");\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error);\n      console.log(error);\n    }\n  };\n\n  const updateProfile = () => {\n    setUpdate(true);\n  };\n\n  const confirmUpdate = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n\n    try {\n      // let response = await axios.post(\"http://localhost:9090/user/profile\",\n      let response = await axios.post(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/profile\",\n        {\n          email: email,\n          firstName: firstName,\n          lastName: lastName,\n        }\n      );\n      console.log(response);\n      let data = response.data;\n      console.log(data);\n\n      fetchUser();\n      setLoading(false);\n      setUpdate(false);\n      showMessage(data.response);\n    } catch (error) {\n      setLoading(false);\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <>\n      {loading ? <Loader /> : null}\n      <Message resMessage={message} />\n      {promptMessage ? (\n        <Prompt\n          resPromptMessage={promptMessage}\n          resPromptHeader={promptHeader}\n          cancelAction={closePromptMessage}\n          confirmAction={confirmDelete}\n          loading={loading}\n        />\n      ) : null}\n      {update === false ? (\n        <section className=\"profile\">\n          {/* {loading ? <Loader /> : null} */}\n          <div className=\"banner\">\n            <h2>Welcome to Wishful</h2>\n            <h1> {user.firstName}</h1>\n          </div>\n          <div className=\"grid gridGapSmall gridTwoColumns container\">\n            <div>\n              <div className=\"grid\">\n                <label htmlFor=\"firstName\">First name</label>\n                <p className=\"name\">{firstName ? firstName : user.firstName}</p>\n              </div>\n              <div className=\"grid\">\n                <label htmlFor=\"lastName\">Last name</label>\n                <p className=\"name\">{lastName ? lastName : user.lastName}</p>\n              </div>\n              <div className=\"grid\">\n                <label htmlFor=\"email\">Email</label>\n                <p className=\"name\">{email ? email : user.email}</p>\n              </div>\n            </div>\n            {/* <div className=\"btnContainer\"> */}\n            {/* <button\n              onClick={() => history.push(\"/wishlists\")}\n              className=\"active\"\n            >\n              Your wishlists\n            </button> */}\n            <div className=\"relative flexEnd alignItemsBottom\">\n              <button\n                className=\"active grid alignSelfBottom\"\n                onClick={updateProfile}\n              >\n                Update profile\n              </button>\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      ) : (\n        <section className=\"profile update\">\n          <div className=\"banner\">\n            <h2>Whatever you want to change...</h2>\n            <h1>Let's update your information</h1>\n          </div>\n          <form\n            className=\"grid gridGapSmall gridTwoColumns container\"\n            onSubmit={confirmUpdate}\n          >\n            <div className=\"\">\n              <div className=\"container grid\">\n                <label htmlFor=\"firstName\">First name</label>\n                <input\n                  className=\"firstName\"\n                  id=\"firstName\"\n                  placeholder=\"First name\"\n                  value={firstName}\n                  type=\"text\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"container grid\">\n                <label htmlFor=\"lastName\">Last name</label>\n                <input\n                  className=\"lastName\"\n                  id=\"lastName\"\n                  placeholder=\"Last name\"\n                  value={lastName}\n                  type=\"text\"\n                  onChange={(e) => setLastName(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"container grid\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  className=\"email\"\n                  id=\"email\"\n                  placeholder=\"E-mail\"\n                  value={email}\n                  type=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                ></input>\n              </div>\n            </div>\n            <div className=\"relative flexEnd alignItemsBottom\">\n              <button\n                className={validateForm() ? \"active\" : \"\"}\n                disabled={!validateForm()}\n                type=\"submit\"\n              >\n                {loading ? \"Loading...\" : \"Save\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"marginTopSmall\"\n                onClick={() => setUpdate(false)}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"btnDelete secondary absolute right\"\n                // HANDLE PROMPT\n                onClick={handleDelete}\n              >\n                Delete profile\n              </button>\n            </div>\n          </form>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport \"./wishlists.css\";\nimport axios from \"axios\";\n\nconst UpdateWishlist = ({\n  setUpdate,\n  fetchWishlist,\n  showMessage,\n  singleWishlist,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const letter = singleWishlist.name.charAt(0);\n\n  const [name, setName] = useState(singleWishlist.name);\n  const [description, setDescription] = useState(singleWishlist.description);\n  const [isPublic, setPublic] = useState(singleWishlist.isPublic);\n\n  const validateForm = () => {\n    return name.length > 0 && description.length > 0;\n  };\n\n  const handleUpdateWishlist = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n    try {\n      let response = await axios.post(\n        // `http://localhost:9090/wishlists/${singleWishlist.ID}`,\n        `http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists/${singleWishlist.ID}`,\n        {\n          name: name,\n          description: description,\n          isPublic: isPublic,\n        }\n      );\n\n      let data = response.data;\n      console.log(response);\n\n      fetchWishlist();\n      setUpdate(false);\n      setLoading(false);\n      showMessage(data.message);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  return (\n    <section className=\"updateWishlist relative\">\n      <button\n        className=\"secondary absolute textLeft left\"\n        onClick={() => setUpdate(false)}\n      >\n        Back\n      </button>\n      <div className=\"coverletter\">{letter}</div>\n      <div className=\"banner\">\n        <h2>Here we go...</h2>\n        <h1>Let's update your wishlist</h1>\n        <h3>{singleWishlist.name}</h3>\n      </div>\n      <form\n        className=\"grid gridGapSmall gridTwoColumns container\"\n        onSubmit={handleUpdateWishlist}\n      >\n        <div className=\"container\">\n          <div className=\"container grid\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              placeholder=\"Name\"\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n            ></input>\n          </div>\n          <div className=\"container grid\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              id=\"description\"\n              placeholder=\"Description\"\n              type=\"text\"\n              onChange={(e) => setDescription(e.target.value)}\n              value={description}\n            ></input>\n          </div>\n          <div className=\"container grid\">\n            <label className=\"label\" htmlFor=\"public\">\n              Public\n            </label>\n            <div className=\"box\">\n              <label className=\"switch\">\n                <input\n                  id=\"public\"\n                  type=\"checkbox\"\n                  onChange={(e) =>\n                    e.target.checked ? setPublic(1) : setPublic(0)\n                  }\n                  checked={isPublic ? true : false}\n                />\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"relative flexEnd container alignItemsBottom\">\n          <button\n            className={validateForm() ? \"active\" : \"\"}\n            disabled={!validateForm()}\n            type=\"submit\"\n          >\n            {loading ? \"Loading...\" : \"Save\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default UpdateWishlist;\n","import React, { useState } from \"react\";\nimport \"./wishlists.css\";\nimport axios from \"axios\";\n\nconst CreateWishlistItem = ({\n  wishlistID,\n  KeyLink,\n  setOpen,\n  fetchWishlist,\n  showMessage,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [price, setPrice] = useState(0);\n  const [link, setLink] = useState([]);\n\n  const validateForm = () => {\n    return link.length > 0 && parseInt(price);\n  };\n\n  const createWishlistItem = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n\n    try {\n      let linkPreviewResponse = await axios.get(\n        `http://api.linkpreview.net/?key=${KeyLink}&q=${link}`,\n        {\n          withCredentials: false,\n        }\n      );\n\n      let dataLinkPreview = linkPreviewResponse.data;\n\n      const image =\n        dataLinkPreview.image === \"\"\n          ? (dataLinkPreview.image =\n              \"https://dummyimage.com/400x400/494949/f9f9f9.png&text=No+image\")\n          : dataLinkPreview.image;\n\n      console.log(image);\n\n      let response = await axios.post(\n        // `http://localhost:9090/wishlists/${wishlistID}/item`,\n        `http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists/${wishlistID}/item`,\n        {\n          title: dataLinkPreview.title,\n          description: dataLinkPreview.description,\n          price: price,\n          link: dataLinkPreview.url,\n          image: image,\n        }\n      );\n\n      let data = response.data;\n\n      console.log(data);\n\n      setLoading(false);\n      fetchWishlist();\n      setOpen(false);\n      showMessage(data.message);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  return (\n    <section className=\"createWishlistItem relative\">\n      <button\n        className=\"secondary absolute textLeft left\"\n        type=\"button\"\n        onClick={() => setOpen(false)}\n      >\n        Back\n      </button>\n      <div className=\"banner\">\n        <h2>Almost done...</h2>\n        <h1 className=\"headerSection\">Simply link the item of your dreams</h1>\n      </div>\n      <form\n        className=\"grid gridGapSmall gridTwoColumns container\"\n        onSubmit={createWishlistItem}\n      >\n        <div className=\"container\">\n          <div className=\"container grid\">\n            <label htmlFor=\"price\"></label>\n            <input\n              onChange={(e) => setPrice(e.target.value)}\n              type=\"text\"\n              name=\"price\"\n              placeholder=\"Price in DKK\"\n            />\n          </div>\n          <div className=\"container grid\">\n            <label htmlFor=\"link\"></label>\n            <input\n              onChange={(e) => setLink(e.target.value)}\n              type=\"text\"\n              name=\"link\"\n              placeholder=\"Link to the item\"\n            />\n          </div>\n        </div>\n        <div className=\"relative flexEnd container alignItemsBottom\">\n          <button\n            id={wishlistID}\n            type=\"submit\"\n            className=\"active marginTopSmall\"\n            disabled={!validateForm()}\n          >\n            {!loading ? \"Save item\" : \"Loading...\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default CreateWishlistItem;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport API from \"./../../../data/api.json\";\n\n// HANDLE PROMPT\nimport usePromptHandler from \"./../../hooks/PrompHandler\";\nimport Prompt from \"./../../Prompt\";\n// HANDLE LOADING\nimport Loader from \"../../Loader\";\n\n// import WishlistItem from \"./WishlistItem\";\nimport UpdateWishList from \"./UpdateWishlist\";\nimport UpdateWishListItem from \"./UpdateWishlistItem\";\nimport CreateWishlistItem from \"./CreateWishlistItem\";\n\nconst SingleWishlist = ({\n  userID,\n  context,\n  wishlist,\n  ID,\n  openWishlist,\n  fetchWishlists,\n  showMessage,\n}) => {\n  const KeyLink = API.KeyLink;\n\n  const [loading, setLoading] = useState(false);\n  const {\n    promptMessage,\n    promptHeader,\n    showPromptMessage,\n    closePromptMessage,\n  } = usePromptHandler(null);\n\n  const letter = wishlist.name.charAt(0);\n  const [open, setOpen] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [showItems, setShowItems] = useState(false);\n  const [showText, setShowText] = useState(false);\n\n  const [deleteType, setDeleteType] = useState(\"\");\n\n  const [singleWishlist, setWishList] = useState(wishlist);\n  const [wishlistItems, setWishListItems] = useState([]);\n  const [wishlistItemID, setWishListItemID] = useState([]);\n  const [wishlistItem, setWishListItem] = useState(\"\");\n\n  const fetchWishlist = async () => {\n    setLoading(true);\n    let response;\n\n    try {\n      if (!context) {\n        // response = await axios.get(`http://localhost:9090/wishlists/${ID}`);\n        response = await axios.get(\n          `http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists/${ID}`\n        );\n      } else {\n        response = await axios.get(\n          // `http://localhost:9090/profile/${userID}/wishlists/${ID}`\n          `http://ec2-54-90-37-154.compute-1.amazonaws.com/profile/${userID}/wishlists/${ID}`\n        );\n      }\n\n      let data = response.data;\n      console.log(data);\n      setWishList(data.list);\n      setWishListItems(data.items);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchWishlist();\n  }, []);\n\n  const handleUpdate = (event, updateType, wishlistItem) => {\n    setUpdate(updateType);\n\n    if (updateType === \"item\") {\n      setWishListItem(wishlistItem);\n    }\n  };\n\n  const handleDelete = (event, deleteType) => {\n    event.preventDefault();\n    setDeleteType(deleteType);\n\n    if (deleteType === \"item\") {\n      setWishListItemID(event.target.id);\n      showPromptMessage(\n        \"Wait...\",\n        \"Are you sure you want to delete this item from your wishlist?\"\n      );\n    } else {\n      event.preventDefault();\n      showPromptMessage(\n        \"Wait...\",\n        \"Are you sure you want to delete your wishlist?\"\n      );\n    }\n  };\n\n  const confirmDelete = async () => {\n    setLoading(true);\n    let response;\n\n    try {\n      if (deleteType === \"item\") {\n        response = await axios.get(\n          // `http://localhost:9090/wishlists/${ID}/item/${wishlistItemID}/delete`\n          `http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists/${ID}/item/${wishlistItemID}/delete`\n        );\n        fetchWishlist();\n      } else {\n        response = await axios.get(\n          // `http://localhost:9090/wishlists/${ID}/delete`\n          `http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists/${ID}/delete`\n        );\n        openWishlist([]);\n        fetchWishlists();\n      }\n\n      let data = response.data.response;\n      console.log(data);\n      setLoading(false);\n      closePromptMessage();\n      showMessage(data);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  return (\n    <>\n      {loading ? <Loader /> : null}\n      {!context && promptMessage ? (\n        <Prompt\n          resPromptMessage={promptMessage}\n          resPromptHeader={promptHeader}\n          cancelAction={closePromptMessage}\n          confirmAction={confirmDelete}\n          loading={loading}\n        />\n      ) : null}\n      {!open && !update ? (\n        <section className=\"singleWishlist relative marginTopSmall\">\n          <button\n            className=\"secondary absolute textLeft\"\n            type=\"button\"\n            onClick={() => openWishlist([])}\n          >\n            Back\n          </button>\n          <div className=\"coverletter\">{letter}</div>\n          <>\n            {wishlistItems.length !== 0 ? (\n              <>\n                <div\n                  // className={!context ? \"banner grid gridTwoThirds\" : \"banner\"}\n                  className=\"banner grid gridTwoThirds\"\n                >\n                  <div>\n                    <h2>Overview</h2>\n                    <h1>{singleWishlist.name}</h1>\n                    <h3>{singleWishlist.description}</h3>\n                    <div className=\"btnContainer grid gridTwoColumns justifyContentLeft\">\n                      <button\n                        className=\"secondary textLeft\"\n                        onClick={(event) => handleUpdate(event, \"wishlist\")}\n                      >\n                        Edit {singleWishlist.name}\n                      </button>\n                      <button\n                        className=\"secondary textLeft\"\n                        type=\"button\"\n                        onClick={(event) => handleDelete(event, \"wishlist\")}\n                      >\n                        Delete {singleWishlist.name}\n                      </button>\n                    </div>\n                  </div>\n                  {!context ? (\n                    <div className=\"relative flexEnd alignItemsBottom\">\n                      <>\n                        <button\n                          className=\"active\"\n                          onClick={() => setOpen(true)}\n                        >\n                          Add item\n                        </button>\n                      </>\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"wishlistItems grid container gridTwoColumns gridGapSmall\">\n                  {showItems ? (\n                    <>\n                      {wishlistItems.map((wishlistItem, i) => (\n                        <div\n                          className=\"wishlistItem relative grid gridGapMedium\"\n                          id={wishlistItem.ID}\n                          key={i}\n                        >\n                          <div className=\"grid gridTwoColumns gridGapSmall\">\n                            <a\n                              className=\"secondary text-center\"\n                              href={wishlistItem.link}\n                              rel=\"noopener noreferrer\"\n                              target=\"_blank\"\n                            >\n                              <div\n                                className=\"img bgCover\"\n                                style={{\n                                  backgroundImage: `url(${wishlistItem.image})`,\n                                }}\n                              ></div>\n                            </a>\n                            <div className=\"grid paddingSmall\">\n                              <h3>{wishlistItem.title}</h3>\n                              <div>\n                                {wishlistItem.description.length > 70 ? (\n                                  <>\n                                    {showText ? (\n                                      <p>{wishlistItem.description}</p>\n                                    ) : (\n                                      <p>\n                                        {wishlistItem.description.substring(\n                                          0,\n                                          70\n                                        )}\n                                        ...\n                                      </p>\n                                    )}\n                                    <button\n                                      className=\"secondary text-center\"\n                                      onClick={() => setShowText(!showText)}\n                                    >\n                                      {showText ? \"Show less\" : \"Show more\"}\n                                    </button>\n                                  </>\n                                ) : (\n                                  <p>{wishlistItem.description}</p>\n                                )}\n                              </div>\n                              <p className=\"alignSelfTop textRight\">\n                                {wishlistItem.price}\n                              </p>\n\n                              <div\n                                id={wishlistItem.ID}\n                                className=\"grid gridTwoColumns justifyContentCenter alignSelfCenter paddingSmall\"\n                              >\n                                <a\n                                  className=\"secondary text-center\"\n                                  href={wishlistItem.link}\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                >\n                                  See item\n                                </a>\n                                {!context ? (\n                                  <>\n                                    <button\n                                      id={wishlistItem.ID}\n                                      className=\"secondary absolute\"\n                                      onClick={(event) =>\n                                        handleDelete(event, \"item\")\n                                      }\n                                    >\n                                      X\n                                    </button>\n                                    <button\n                                      className=\"secondary\"\n                                      onClick={(event) =>\n                                        handleUpdate(\n                                          event,\n                                          \"item\",\n                                          wishlistItem\n                                        )\n                                      }\n                                    >\n                                      Update item\n                                    </button>\n                                  </>\n                                ) : null}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </>\n                  ) : (\n                    <>\n                      {wishlistItems.map((wishlistItem, i) =>\n                        i < 4 ? (\n                          <div\n                            className=\"wishlistItem relative grid gridGapMedium\"\n                            id={wishlistItem.ID}\n                            key={i}\n                          >\n                            <div className=\"grid gridTwoColumns gridGapSmall\">\n                              <a\n                                className=\"secondary text-center\"\n                                href={wishlistItem.link}\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                              >\n                                <div\n                                  className=\"img bgCover\"\n                                  style={{\n                                    backgroundImage: `url(${wishlistItem.image})`,\n                                  }}\n                                ></div>\n                              </a>\n                              <div className=\"grid paddingSmall\">\n                                <h3>{wishlistItem.title}</h3>\n                                <div>\n                                  {wishlistItem.description.length > 70 ? (\n                                    <>\n                                      {showText ? (\n                                        <p>{wishlistItem.description}</p>\n                                      ) : (\n                                        <p>\n                                          {wishlistItem.description.substring(\n                                            0,\n                                            70\n                                          )}\n                                          ...\n                                        </p>\n                                      )}\n                                      <button\n                                        className=\"secondary textRight\"\n                                        onClick={() => setShowText(!showText)}\n                                      >\n                                        {showText ? \"Show less\" : \"Show more\"}\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <p>{wishlistItem.description}</p>\n                                  )}\n                                </div>\n                                <p className=\"alignSelfTop textRight\">\n                                  {wishlistItem.price}\n                                </p>\n                                <div className=\"grid gridTwoColumns justifyContentCenter alignSelfCenter paddingSmall\">\n                                  <a\n                                    className=\"secondary text-center\"\n                                    href={wishlistItem.link}\n                                    rel=\"noopener noreferrer\"\n                                    target=\"_blank\"\n                                  >\n                                    See item\n                                  </a>\n                                  {!context ? (\n                                    <>\n                                      <button\n                                        id={wishlistItem.ID}\n                                        className=\"secondary absolute right\"\n                                        onClick={(event) =>\n                                          handleDelete(event, \"item\")\n                                        }\n                                      >\n                                        X\n                                      </button>\n                                      <button\n                                        className=\"secondary\"\n                                        onClick={(event) =>\n                                          handleUpdate(\n                                            event,\n                                            \"item\",\n                                            wishlistItem\n                                          )\n                                        }\n                                      >\n                                        Edit item\n                                      </button>\n                                    </>\n                                  ) : null}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ) : null\n                      )}\n                    </>\n                  )}\n                </div>\n                <div className=\"grid container justifyContentCenter\">\n                  {wishlistItems.length > 4 && !showItems ? (\n                    <button\n                      className=\"secondary text-center\"\n                      onClick={() => setShowItems(true)}\n                    >\n                      Show all\n                    </button>\n                  ) : wishlistItems.length > 4 && showItems ? (\n                    <button\n                      className=\"secondary text-center\"\n                      onClick={() => setShowItems(false)}\n                    >\n                      Show less\n                    </button>\n                  ) : null}\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"banner grid gridTwoThirds\">\n                  {/* <div> */}\n                  {!context ? (\n                    <>\n                      <div>\n                        <h2>\n                          You have no wishes yet for {singleWishlist.name}...\n                        </h2>\n                        <h1>Start making them come true today</h1>\n                        <div className=\"btnContainer grid gridTwoColumns justifyContentLeft\">\n                          <button\n                            className=\"secondary textLeft\"\n                            onClick={(event) => handleUpdate(event, \"wishlist\")}\n                          >\n                            Edit {singleWishlist.name}\n                          </button>\n                          <button\n                            className=\"secondary textLeft\"\n                            type=\"button\"\n                            onClick={(event) => handleDelete(event, \"wishlist\")}\n                          >\n                            Delete {singleWishlist.name}\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"relative flexEnd alignItemsBottom\">\n                        <>\n                          <button\n                            className=\"active\"\n                            onClick={() => setOpen(true)}\n                          >\n                            Add item\n                          </button>\n                        </>\n                      </div>\n                    </>\n                  ) : (\n                    <div>\n                      <p>This wishlist has no wishes yet...</p>\n                      <h1 className=\"headerSection\">Stay tuned for wishes</h1>\n                    </div>\n                  )}\n                  {/* </div> */}\n                </div>\n              </>\n            )}\n          </>\n        </section>\n      ) : open ? (\n        <CreateWishlistItem\n          KeyLink={KeyLink}\n          setOpen={(data) => setOpen(data)}\n          fetchWishlist={() => fetchWishlist()}\n          showMessage={(data) => showMessage(data)}\n          wishlistID={ID}\n        />\n      ) : update === \"wishlist\" ? (\n        <UpdateWishList\n          setUpdate={(data) => setUpdate(data)}\n          fetchWishlist={() => fetchWishlist()}\n          showMessage={(data) => showMessage(data)}\n          singleWishlist={singleWishlist}\n        />\n      ) : update === \"item\" ? (\n        <UpdateWishListItem\n          KeyLink={KeyLink}\n          ID={wishlistItemID}\n          wishlistItem={wishlistItem}\n          setOpen={(data) => setUpdate(data)}\n          fetchWishlist={() => fetchWishlist()}\n          showMessage={(data) => showMessage(data)}\n          wishlistID={ID}\n        />\n      ) : null}\n    </>\n  );\n};\nexport default SingleWishlist;\n\n// <WishlistItem\n//   wishlistItem={wishlistItem}\n//   i={i}\n//   wishlistID={ID}\n//   showPromptMessage={(\n//     resPromptHeader,\n//     resPromptMessage\n//   ) =>\n//     showPromptMessage(\n//       resPromptHeader,\n//       resPromptMessage\n//     )\n//   }\n//   showMessage={(data) => showMessage(data)}\n//   fetchWishlist={(data) => fetchWishlist(data)}\n//   setLoading={(data) => setLoading(data)}\n//   setWishListItemID={(data) =>\n//     setWishListItemID(data)\n//   }\n//   setDeleteType={(data) => setDeleteType(data)}\n// />\n","import React, { useState } from \"react\";\nimport \"./wishlists.css\";\nimport axios from \"axios\";\n\nconst CreateWishList = ({ setUpdate, fetchWishlists, showMessage }) => {\n  const [loading, setLoading] = useState(false);\n\n  const [name, setName] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [isPublic, setPublic] = useState(1);\n\n  const validateForm = () => {\n    return name.length > 0 && description.length > 0;\n  };\n\n  const handleCreateWishlist = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n    try {\n      // let response = await axios.post(\"http://localhost:9090/wishlists\",\n      let response = await axios.post(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists\",\n        {\n          name: name,\n          description: description,\n          isPublic: isPublic,\n        }\n      );\n\n      let data = response.data;\n\n      fetchWishlists();\n      setUpdate(false);\n      setLoading(false);\n      showMessage(data.message);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  return (\n    <section className=\"createWishlist relative\">\n      <button\n        className=\"secondary absolute textLeft left\"\n        onClick={() => setUpdate(false)}\n      >\n        Back\n      </button>\n      <div className=\"banner\">\n        <h2>Here we go...</h2>\n        <h1>Let's create a wishlist!</h1>\n      </div>\n      <form\n        className=\"grid gridGapSmall gridTwoColumns container\"\n        onSubmit={handleCreateWishlist}\n      >\n        <div className=\"container\">\n          <div className=\"container grid\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              placeholder=\"Name\"\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"container grid\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              id=\"description\"\n              placeholder=\"Description\"\n              type=\"text\"\n              onChange={(e) => setDescription(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"container grid\">\n            <label className=\"label\" htmlFor=\"public\">\n              Do you want your wishlist to be public?\n            </label>\n            <div className=\"box\">\n              <label className=\"switch\">\n                <input\n                  id=\"public\"\n                  defaultChecked\n                  type=\"checkbox\"\n                  onChange={(e) =>\n                    e.target.checked ? setPublic(1) : setPublic(0)\n                  }\n                />\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"relative flexEnd container alignItemsBottom\">\n          <button className=\"active\" disabled={!validateForm()} type=\"submit\">\n            {loading ? \"Loading...\" : \"Save\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default CreateWishList;\n","import React from \"react\";\n\nconst WishlistButton = ({ i, wishlist, fetchSingleWishlist }) => {\n  const letter = wishlist.name.charAt(0);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    fetchSingleWishlist(wishlist);\n  };\n\n  return (\n    <button\n      className=\"btnSingleWishlist relative\"\n      description={wishlist.description}\n      name={wishlist.name}\n      id={wishlist.ID}\n      onClick={handleClick}\n      key={i}\n    >\n      <div className=\"coverletter\">{letter}</div>\n      <span>\n        <h2 id={wishlist.ID}>{wishlist.name}</h2>\n        <p id={wishlist.ID}>{wishlist.description}</p>\n      </span>\n    </button>\n  );\n};\n\nexport default WishlistButton;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SingleWishlist from \"./SingleWishlist\";\nimport \"./wishlists.css\";\nimport axios from \"axios\";\nimport CreateWishList from \"./CreateWishlist.jsx\";\n//HANDLE MESSAGE\nimport useMessageHandler from \"../../hooks/MessageHandler.jsx\";\nimport Message from \"./../../Message.jsx\";\nimport Loader from \"../../Loader\";\nimport WishlistButton from \"./WishlistButton\";\n\nconst Wishlists = ({ userID, context }) => {\n  const history = useHistory();\n\n  const { message, showMessage } = useMessageHandler(null);\n  const [loading, setLoading] = useState(false);\n\n  const [update, setUpdate] = useState(false);\n\n  const [wishlistsBank, setWishlistsBank] = useState([]);\n  const [singleWishlist, setSingleWishlist] = useState([]);\n\n  useEffect(() => {\n    fetchWishlists();\n  }, []);\n\n  const fetchWishlists = async () => {\n    setLoading(true);\n    try {\n      let response;\n      if (context) {\n        response = await axios.get(\n          // `http://localhost:9090/profile/${userID}/wishlists/`\n          `http://ec2-54-90-37-154.compute-1.amazonaws.com/profile/${userID}/wishlists/`\n        );\n      } else {\n        // response = await axios.get(\"http://localhost:9090/wishlists\");\n        response = await axios.get(\n          \"http://ec2-54-90-37-154.compute-1.amazonaws.com/wishlists\"\n        );\n      }\n\n      let data = response.data.response;\n\n      let wishlists = data.map((wishlist) => ({\n        ID: `${wishlist.ID}`,\n        name: `${wishlist.name}`,\n        description: `${wishlist.description}`,\n      }));\n\n      setWishlistsBank(wishlists);\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    } catch (error) {\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  const fetchSingleWishlist = (data) => {\n    setSingleWishlist(data);\n  };\n\n  return (\n    <>\n      {loading ? <Loader /> : null}\n      <Message resMessage={message} />\n      {!update ? (\n        <>\n          {singleWishlist.length === 0 ? (\n            <section\n              className={\n                !context\n                  ? \"wishlists relative\"\n                  : \"wishlists relative marginTopMedium\"\n              }\n            >\n              <button\n                className=\"secondary absolute textLeft left\"\n                type=\"button\"\n                onClick={() => history.goBack()}\n              >\n                Back\n              </button>\n              <div\n                className={\n                  !context\n                    ? \"banner relative grid gridTwoThirds\"\n                    : \"banner relative\"\n                }\n              >\n                <div>\n                  <h2>Overview</h2>\n                  <h1>Wishlists</h1>\n                </div>\n                {!context && wishlistsBank.length ? (\n                  <div className=\"relative flexEnd alignItemsBottom\">\n                    <button\n                      className=\"btnCreateWishList active\"\n                      onClick={() => setUpdate(true)}\n                    >\n                      Create wishlist\n                    </button>\n                  </div>\n                ) : null}\n              </div>\n              {!wishlistsBank.length ? (\n                <div className=\"banner\">\n                  {!context ? (\n                    <div className=\"container grid justifyContentCenter\">\n                      <button\n                        className=\"btnCreateWishList active marginTopSmall\"\n                        onClick={() => setUpdate(true)}\n                      >\n                        Create wishlist\n                      </button>\n                    </div>\n                  ) : (\n                    <h2>No wishlists yet...</h2>\n                  )}\n                </div>\n              ) : (\n                <div className=\"wishlistContainer grid gridFourColumns container gridGapSmall\">\n                  {wishlistsBank.map((wishlist, i) => (\n                    <WishlistButton\n                      i={i}\n                      key={i}\n                      wishlist={wishlist}\n                      fetchSingleWishlist={(data) => fetchSingleWishlist(data)}\n                    />\n                  ))}\n                </div>\n              )}\n            </section>\n          ) : (\n            <SingleWishlist\n              userID={userID}\n              context={context}\n              openWishlist={(data) => setSingleWishlist(data)}\n              fetchWishlists={() => fetchWishlists()}\n              wishlist={singleWishlist}\n              ID={singleWishlist.ID}\n              showMessage={(data) => showMessage(data)}\n            />\n          )}\n        </>\n      ) : (\n        <CreateWishList\n          setUpdate={(data) => setUpdate(data)}\n          fetchWishlists={() => fetchWishlists()}\n          showMessage={(data) => showMessage(data)}\n        />\n      )}\n    </>\n  );\n};\nexport default Wishlists;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./user.css\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"./../../Loader.jsx\";\nimport Wishlists from \"./../wishlists/Wishlists\";\n\nconst ProfilePublic = (props) => {\n  const history = useHistory();\n  const ID = props.searchID ? props.searchID : props.match.params.ID;\n\n  const [user, setUser] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUserProfile = async () => {\n    setLoading(true);\n    try {\n      let response = await axios.get(\n        // `http://localhost:9090/user/profile/${ID}`\n        `http://ec2-54-90-37-154.compute-1.amazonaws.com/user/profile/${ID}`\n      );\n      let data = response.data.response;\n      setUser(data);\n      setLoading(false);\n    } catch (error) {\n      history.push(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, [ID]);\n\n  return (\n    <>\n      {loading ? <Loader /> : null}\n      <div className=\"profile thumbnail bgPurple\">\n        <p className=\"colorWhite\"> Profile</p>\n        <h1 className=\"colorWhite\">\n          {user.firstName} {user.lastName}\n        </h1>\n      </div>\n      <Wishlists userID={ID} context=\"public\" />\n    </>\n  );\n};\n\nexport default ProfilePublic;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Logout = (props) => {\n  const history = useHistory();\n\n  if (localStorage.length === 0) {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    handleUnAuth();\n  }, []);\n\n  const handleUnAuth = async () => {\n    try {\n      // await axios.get(\"http://localhost:9090/user/logout\");\n      await axios.get(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/logout\"\n      );\n      props.onAuth(false);\n      localStorage.clear();\n      history.push(\"/\");\n    } catch (error) {\n      if (error) {\n        console.log(error.response.data.response);\n      }\n    }\n  };\n\n  return <></>;\n};\n\nexport default Logout;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n//MESSAGE HANDLING\nimport useMessageHandler from \"./../../hooks/MessageHandler.jsx\";\nimport Message from \"./../../Message.jsx\";\n\nconst ResetPassword = (props) => {\n  const history = useHistory();\n\n  if (localStorage.getItem(\"user\")) {\n    history.push(\"/profile\");\n  }\n\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n\n  // HANDLE LOADING\n  const [loading, setLoading] = useState(false);\n\n  // HANDLE MESSAGE\n  const { message, showMessage } = useMessageHandler(null);\n\n  const userToken = props.match.params.token;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // HANDLE LOADING\n      setLoading(true);\n\n      //HANDLE FETCH DATA\n      // let response = await axios.post(\"http://localhost:9090/confirmReset/\",\n      let response = await axios.post(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/\",\n        {\n          password: password,\n          repeatPassword: repeatPassword,\n          token: userToken,\n        }\n      );\n\n      let data = response.data.response;\n\n      //HANDLE LOADING\n      setLoading(false);\n      //HANDLE MESSAGE\n      showMessage(data);\n\n      setTimeout(() => {\n        history.push(\"/login\");\n      }, 3000);\n    } catch (error) {\n      //HANDLE LOADING\n      setLoading(false);\n\n      //HANDLE MESSAGE\n      showMessage(error.response.data.response);\n    }\n  };\n\n  const validateForm = () => {\n    return (\n      password.length > 0 &&\n      password.length >= 8 &&\n      repeatPassword.length > 0 &&\n      repeatPassword.length >= 8 &&\n      password === repeatPassword\n    );\n  };\n\n  return (\n    <section className=\"resetPassword\">\n      <Message resMessage={message} />\n      <div className=\"banner\">\n        <h2>Here we go</h2>\n        <h1 className=\"formHeader\">Let's reset your password</h1>\n      </div>\n      <form\n        className=\"grid gridGapSmall gridTwoColumns container\"\n        id=\"resetPassword\"\n      >\n        <div className=\"container\">\n          <div className=\"container grid\">\n            <label htmlFor=\"password\"> Password </label>\n            <input\n              id=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={password.password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"container grid\">\n            <label htmlFor=\"repeatPassword\"> Repeat password </label>\n            <input\n              id=\"repeatPassword\"\n              placeholder=\"Repeat your password\"\n              type=\"password\"\n              value={password.repeatPassword}\n              onChange={(e) => setRepeatPassword(e.target.value)}\n            ></input>\n          </div>\n        </div>\n        <div className=\"relative flexEnd container alignItemsBottom\">\n          <button\n            className={validateForm() ? \"active\" : \"\"}\n            disabled={!validateForm()}\n            onClick={handleSubmit}\n            type=\"submit\"\n          >\n            {loading ? \"Loading...\" : \"Confirm new password\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n//MESSAGE HANDLING\nimport useMessageHandler from \"../../hooks/MessageHandler.jsx\";\nimport Message from \"../../Message.jsx\";\n\nconst RequestEmailResetPassword = (props) => {\n  const emailValidation = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n  const [email, setEmail] = useState(\"\");\n  const [open, setOpen] = useState(true);\n\n  // HANDLE LOADING\n  const [loading, setLoading] = useState(false);\n\n  // HANDLE MESSAGE\n  const { message, showMessage } = useMessageHandler(null);\n  const history = useHistory();\n\n  if (localStorage.getItem(\"user\")) {\n    history.push(\"/profile\");\n  }\n\n  useEffect(() => {\n    showMessage(\"Please enter your email\");\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      //HANDLE LOADING\n      setLoading(true);\n\n      // HANDLE FETCH DATA\n      // let response = await axios.post(\"http://localhost:9090/requestReset\"\n      let response = await axios.post(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/requestReset\",\n        {\n          email: email,\n        }\n      );\n      let data = response.data.response;\n      console.log(data);\n      setLoading(false);\n      showMessage(data);\n      setOpen(false);\n    } catch (error) {\n      // HANDLE LOADING\n      setLoading(false);\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  const validateForm = () => {\n    return email.length > 0 && emailValidation.test(email);\n  };\n\n  return (\n    <section className=\"forgottenPassword\">\n      <Message resMessage={message} />\n      {open ? (\n        <>\n          <div className=\"banner\">\n            <h2>Here we go</h2>\n            <h1>Let's reset your password</h1>\n          </div>\n          <form\n            className=\"grid gridGapSmall gridTwoColumns container\"\n            id=\"forgottenPassword\"\n          >\n            <div className=\"container\">\n              <div className=\"container grid\">\n                <label htmlFor=\"email\"> Email </label>\n                <input\n                  id=\"email\"\n                  placeholder=\"E-mail\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></input>\n              </div>\n            </div>\n            <div className=\"relative flexEnd container alignItemsBottom\">\n              <button\n                className={validateForm() ? \"active\" : \"\"}\n                disabled={!validateForm}\n                onClick={handleSubmit}\n                type=\"submit\"\n              >\n                {loading ? \"Loading...\" : \"Request new password\"}\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <>\n          <div className=\"banner\">\n            <h2>We're almost there!</h2>\n            <h1>Please check your e-mail and follow the link to proceed.</h1>\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default RequestEmailResetPassword;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\n//ERROR HANDLING\nimport useMessageHandler from \"./../../hooks/MessageHandler.jsx\";\nimport Message from \"./../../Message.jsx\";\n\nconst Register = (props) => {\n  const emailValidation = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const { message, showMessage } = useMessageHandler(null);\n\n  const history = useHistory();\n  const from = props.location.state || { from: { pathname: \"/profile\" } };\n\n  const validateForm = () => {\n    return (\n      firstName &&\n      lastName &&\n      email.length > 0 &&\n      password.length >= 8 &&\n      repeatPassword === password &&\n      emailValidation.test(email)\n    );\n  };\n\n  if (localStorage.getItem(\"user\")) {\n    history.push(\"/profile\");\n  }\n\n  const handleSubmit = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n\n    try {\n      let response = await axios.post(\n        // \"http://localhost:9090/user/signup\"\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/user/signup\",\n        {\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password,\n          repeatPassword: repeatPassword,\n        }\n      );\n\n      let data = response.data;\n      localStorage.setItem(\"user\", JSON.stringify(data.response));\n\n      //HANDLE AUTH\n      props.onAuth(true);\n\n      //HANDLE REDIRECT\n      history.push(from.from.pathname);\n    } catch (error) {\n      //HANDLE LOADING\n      setLoading(false);\n\n      // HANDLE ERROR\n      showMessage(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  return (\n    <>\n      <Message resMessage={message} />\n      <section className=\"signup\">\n        <div className=\"banner\">\n          <h2>Let's get started...</h2>\n          <h1 className=\"headerSection\">Sign up</h1>\n          <div></div>\n        </div>\n        <div>\n          <form\n            className=\"grid gridGapSmall gridTwoColumns container\"\n            onSubmit={handleSubmit}\n          >\n            <div className=\"container\">\n              <div className=\"container grid\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  id=\"firstName\"\n                  placeholder=\"First Name\"\n                  type=\"text\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"container grid\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                  id=\"lastName\"\n                  placeholder=\"Last Name\"\n                  type=\"text\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"container grid\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  id=\"email\"\n                  placeholder=\"E-mail\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"container grid\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"container grid\">\n                <label htmlFor=\"Repeat password\">Repeat password</label>\n                <input\n                  id=\"repeatPassword\"\n                  placeholder=\"repeatPassword\"\n                  type=\"password\"\n                  value={repeatPassword}\n                  onChange={(e) => setRepeatPassword(e.target.value)}\n                ></input>\n              </div>\n            </div>\n            <div className=\"relative flexEnd container alignItemsBottom\">\n              <button\n                className=\"active\"\n                disabled={!validateForm()}\n                type=\"submit\"\n              >\n                {loading ? \"Loading\" : \"Sign up\"}\n              </button>\n            </div>\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Search = ({ setSearchID }) => {\n  const history = useHistory();\n  const [active, setActive] = useState(false);\n  const [searchResults, setSearchResults] = useState(\"\");\n\n  const handleSearch = async (e) => {\n    e.target.value.length === 0 ? hideSearchContainer() : showSearchContainer();\n\n    try {\n      const response = await axios.get(\n        // `http://localhost:9090/search/users?term=${e.target.value}`\n        `http://ec2-54-90-37-154.compute-1.amazonaws.com/search/users?term=${e.target.value}`\n      );\n\n      let data = response.data.response;\n\n      let results = data.map((result) => ({\n        ID: `${result.ID}`,\n        firstName: `${result.firstName}`,\n        lastName: `${result.lastName}`,\n      }));\n\n      setSearchResults(results);\n    } catch (error) {\n      setSearchResults(error.response.data.response);\n      console.log(error.response.data.response);\n    }\n  };\n\n  const showSearchContainer = (e) => {\n    setActive(true);\n  };\n\n  const hideSearchContainer = (e) => {\n    if (e) {\n      e.target.value = \"\";\n    }\n    setTimeout(() => {\n      setSearchResults(\"\");\n      setActive(false);\n    }, 100);\n  };\n\n  const fetchProfile = (result) => {\n    console.log(result);\n\n    setSearchID(result.ID);\n    history.push(`/profile/${result.ID}`);\n  };\n\n  return (\n    <>\n      <form id=\"frmSearch\">\n        {active ? (\n          <input\n            onInput={handleSearch}\n            onFocus={showSearchContainer}\n            onBlur={hideSearchContainer}\n            className=\"active\"\n            id=\"search\"\n            type=\"text\"\n            placeholder=\"Search on Wishful\"\n          />\n        ) : (\n          <input\n            onInput={handleSearch}\n            onFocus={showSearchContainer}\n            onBlur={hideSearchContainer}\n            id=\"search\"\n            type=\"text\"\n            placeholder=\"&#xF002;\"\n          />\n        )}\n      </form>\n      {searchResults.length !== 0 && searchResults !== \"No result\" ? (\n        <div\n          className=\"searchResults\"\n          // style={active ? { display: \"grid\" } : { display: \"grid\" }}\n        >\n          {searchResults.map((result, i) => (\n            <p\n              className=\"btnResult\"\n              id={result.ID}\n              onClick={() => fetchProfile(result)}\n              key={i}\n            >\n              {result.firstName} {result.lastName}\n            </p>\n          ))}\n        </div>\n      ) : searchResults === \"No result\" ? (\n        <div\n          className=\"searchResults\"\n          // style={active ? { display: \"grid\" } : { display: \"grid\" }}\n        >\n          <p>{searchResults}</p>\n        </div>\n      ) : null}\n    </>\n  );\n};\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./components/utilComponents.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Home from \"./components/pages/home/Home.jsx\";\nimport Login from \"./components/pages/user/Login.jsx\";\nimport Profile from \"./components/pages/user/Profile.jsx\";\nimport ProfilePublic from \"./components/pages/user/ProfilePublic.jsx\";\nimport Logout from \"./components/pages/user/Logout.jsx\";\nimport Reset from \"./components/pages/password/ResetPassword.jsx\";\nimport RequestEmail from \"./components/pages/password/RequestEmailResetPassword.jsx\";\nimport Register from \"./components/pages/user/Signup.jsx\";\nimport Wishlists from \"./components/pages/wishlists/Wishlists.jsx\";\nimport Search from \"./components/Search.jsx\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true; //makes sure the cookies are the same for all routes\n\nconst AuthenticatedRoute = ({ component: Component, auth, ...rest }) => {\n  // Component = Recieved as a prop, and it will be the protected route's component\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true || localStorage.getItem(\"user\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst App = (props) => {\n  const [auth, setAuth] = useState(localStorage.getItem(\"user\") ? true : false);\n\n  const fetchAuthorization = async () => {\n    try {\n      // const response = await axios.get(\"http://localhost:9090/user/authorize\");\n      const response = await axios.get(\n        \"http://ec2-54-90-37-154.compute-1.amazonaws.com/authorize\"\n      );\n      setAuth(response.data);\n    } catch (error) {\n      setAuth(false);\n    }\n  };\n\n  const handleAuth = (data) => {\n    setAuth(data);\n  };\n\n  const handleUnAuth = () => {\n    setAuth(false);\n  };\n\n  const [searchID, setSearchID] = useState(false);\n\n  console.log(searchID);\n\n  useEffect(() => {\n    console.log(\"Mounting and fecthing auth - currently auth is \" + auth);\n    fetchAuthorization();\n    return () => console.log(\"Unmounting...\");\n  }, [auth]);\n\n  return (\n    <Router basename={\"/\"}>\n      <div className=\"App\">\n        <nav className=\"Navigation\">\n          <ul\n            style={\n              auth\n                ? { gridTemplateColumns: \"repeat(5, 1fr)\" }\n                : { gridTemplateColumns: \"repeat(4, 1fr)\" }\n            }\n          >\n            <header>\n              <Link to={`${process.env.PUBLIC_URL}/`}>Wishful</Link>\n            </header>\n            {auth ? (\n              <React.Fragment>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/`}\n                    exact\n                  >\n                    Home\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/wishlists`}\n                  >\n                    Your wishlists\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/profile`}\n                  >\n                    Profile\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/logout`}\n                  >\n                    Log out\n                  </NavLink>\n                </li>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/`}\n                    exact\n                  >\n                    Home\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/login`}\n                  >\n                    Login\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    activeClassName=\"active\"\n                    to={`${process.env.PUBLIC_URL}/signup`}\n                  >\n                    Sign up\n                  </NavLink>\n                </li>\n              </React.Fragment>\n            )}\n          </ul>\n        </nav>\n\n        <main className={auth === false ? \"public\" : \"\"}>\n          <Switch>\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/`}\n              component={(props) => <Home {...props} auth={auth} />}\n            />\n\n            <AuthenticatedRoute\n              exact\n              auth={auth}\n              path={`${process.env.PUBLIC_URL}/wishlists`}\n              component={(props) => <Wishlists {...props} />}\n            />\n            <AuthenticatedRoute\n              exact\n              auth={auth}\n              path={`${process.env.PUBLIC_URL}/profile`}\n              component={(props) => (\n                <Profile onUnAuth={handleUnAuth} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/login`}\n              component={(props) => (\n                <Login auth={auth} onAuth={handleAuth} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/signup`}\n              component={(props) => <Register onAuth={handleAuth} {...props} />}\n            />\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/profile/:ID`}\n              component={(props) => (\n                <ProfilePublic searchID={searchID} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/logout`}\n              component={(props) => <Logout onAuth={handleUnAuth} {...props} />}\n            />\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/confirmReset/:token`}\n              component={(props) => <Reset {...props} />}\n            />\n            <Route\n              exact\n              path={`${process.env.PUBLIC_URL}/requestReset`}\n              component={(props) => <RequestEmail {...props} />}\n            />\n          </Switch>\n          <Search setSearchID={(data) => setSearchID(data)} />\n          <div className=\"colorBlockContainer grid\">\n            <div className=\"colorBlock bgGreen\"></div>\n            <div className=\"colorBlock grid gridTwoColumns\">\n              <div className=\"bgPurple\"></div>\n              <div className=\"bgBlue\"></div>\n            </div>\n          </div>\n        </main>\n        <footer></footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}